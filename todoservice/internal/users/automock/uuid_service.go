// Code generated by mockery. DO NOT EDIT.

package automock

import mock "github.com/stretchr/testify/mock"

// UUIDService is an autogenerated mock type for the UUIDService type
type UUIDService struct {
	mock.Mock
}

type UUIDService_Expecter struct {
	mock *mock.Mock
}

func (_m *UUIDService) EXPECT() *UUIDService_Expecter {
	return &UUIDService_Expecter{mock: &_m.Mock}
}

// Generate provides a mock function with given fields:
func (_m *UUIDService) Generate() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Generate")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// UUIDService_Generate_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Generate'
type UUIDService_Generate_Call struct {
	*mock.Call
}

// Generate is a helper method to define mock.On call
func (_e *UUIDService_Expecter) Generate() *UUIDService_Generate_Call {
	return &UUIDService_Generate_Call{Call: _e.mock.On("Generate")}
}

func (_c *UUIDService_Generate_Call) Run(run func()) *UUIDService_Generate_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *UUIDService_Generate_Call) Return(_a0 string) *UUIDService_Generate_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *UUIDService_Generate_Call) RunAndReturn(run func() string) *UUIDService_Generate_Call {
	_c.Call.Return(run)
	return _c
}

// NewUUIDService creates a new instance of UUIDService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewUUIDService(t interface {
	mock.TestingT
	Cleanup(func())
}) *UUIDService {
	mock := &UUIDService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
